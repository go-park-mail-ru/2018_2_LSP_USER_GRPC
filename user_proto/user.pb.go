// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.proto

package user_proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ManyUsersOptions struct {
	Page                 int64    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	OrderBy              string   `protobuf:"bytes,2,opt,name=OrderBy,proto3" json:"OrderBy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ManyUsersOptions) Reset()         { *m = ManyUsersOptions{} }
func (m *ManyUsersOptions) String() string { return proto.CompactTextString(m) }
func (*ManyUsersOptions) ProtoMessage()    {}
func (*ManyUsersOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{0}
}

func (m *ManyUsersOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ManyUsersOptions.Unmarshal(m, b)
}
func (m *ManyUsersOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ManyUsersOptions.Marshal(b, m, deterministic)
}
func (m *ManyUsersOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ManyUsersOptions.Merge(m, src)
}
func (m *ManyUsersOptions) XXX_Size() int {
	return xxx_messageInfo_ManyUsersOptions.Size(m)
}
func (m *ManyUsersOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_ManyUsersOptions.DiscardUnknown(m)
}

var xxx_messageInfo_ManyUsersOptions proto.InternalMessageInfo

func (m *ManyUsersOptions) GetPage() int64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ManyUsersOptions) GetOrderBy() string {
	if m != nil {
		return m.OrderBy
	}
	return ""
}

type OneUserOptions struct {
	Fields               map[string]bool `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *OneUserOptions) Reset()         { *m = OneUserOptions{} }
func (m *OneUserOptions) String() string { return proto.CompactTextString(m) }
func (*OneUserOptions) ProtoMessage()    {}
func (*OneUserOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{1}
}

func (m *OneUserOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OneUserOptions.Unmarshal(m, b)
}
func (m *OneUserOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OneUserOptions.Marshal(b, m, deterministic)
}
func (m *OneUserOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OneUserOptions.Merge(m, src)
}
func (m *OneUserOptions) XXX_Size() int {
	return xxx_messageInfo_OneUserOptions.Size(m)
}
func (m *OneUserOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_OneUserOptions.DiscardUnknown(m)
}

var xxx_messageInfo_OneUserOptions proto.InternalMessageInfo

func (m *OneUserOptions) GetFields() map[string]bool {
	if m != nil {
		return m.Fields
	}
	return nil
}

type UserID struct {
	ID                   int64    `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserID) Reset()         { *m = UserID{} }
func (m *UserID) String() string { return proto.CompactTextString(m) }
func (*UserID) ProtoMessage()    {}
func (*UserID) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{2}
}

func (m *UserID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserID.Unmarshal(m, b)
}
func (m *UserID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserID.Marshal(b, m, deterministic)
}
func (m *UserID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserID.Merge(m, src)
}
func (m *UserID) XXX_Size() int {
	return xxx_messageInfo_UserID.Size(m)
}
func (m *UserID) XXX_DiscardUnknown() {
	xxx_messageInfo_UserID.DiscardUnknown(m)
}

var xxx_messageInfo_UserID proto.InternalMessageInfo

func (m *UserID) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

type UserEmail struct {
	Email                string   `protobuf:"bytes,1,opt,name=Email,proto3" json:"Email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserEmail) Reset()         { *m = UserEmail{} }
func (m *UserEmail) String() string { return proto.CompactTextString(m) }
func (*UserEmail) ProtoMessage()    {}
func (*UserEmail) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{3}
}

func (m *UserEmail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserEmail.Unmarshal(m, b)
}
func (m *UserEmail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserEmail.Marshal(b, m, deterministic)
}
func (m *UserEmail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserEmail.Merge(m, src)
}
func (m *UserEmail) XXX_Size() int {
	return xxx_messageInfo_UserEmail.Size(m)
}
func (m *UserEmail) XXX_DiscardUnknown() {
	xxx_messageInfo_UserEmail.DiscardUnknown(m)
}

var xxx_messageInfo_UserEmail proto.InternalMessageInfo

func (m *UserEmail) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type User struct {
	ID                   int64    `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Email                string   `protobuf:"bytes,2,opt,name=Email,proto3" json:"Email,omitempty"`
	Username             string   `protobuf:"bytes,3,opt,name=Username,proto3" json:"Username,omitempty"`
	FirstName            string   `protobuf:"bytes,4,opt,name=FirstName,proto3" json:"FirstName,omitempty"`
	LastName             string   `protobuf:"bytes,5,opt,name=LastName,proto3" json:"LastName,omitempty"`
	Avatar               string   `protobuf:"bytes,6,opt,name=Avatar,proto3" json:"Avatar,omitempty"`
	TotalScore           int64    `protobuf:"varint,7,opt,name=TotalScore,proto3" json:"TotalScore,omitempty"`
	TotalGames           int64    `protobuf:"varint,8,opt,name=TotalGames,proto3" json:"TotalGames,omitempty"`
	Password             string   `protobuf:"bytes,9,opt,name=Password,proto3" json:"Password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{4}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *User) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *User) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *User) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *User) GetTotalScore() int64 {
	if m != nil {
		return m.TotalScore
	}
	return 0
}

func (m *User) GetTotalGames() int64 {
	if m != nil {
		return m.TotalGames
	}
	return 0
}

func (m *User) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func init() {
	proto.RegisterType((*ManyUsersOptions)(nil), "user_proto.ManyUsersOptions")
	proto.RegisterType((*OneUserOptions)(nil), "user_proto.OneUserOptions")
	proto.RegisterMapType((map[string]bool)(nil), "user_proto.OneUserOptions.FieldsEntry")
	proto.RegisterType((*UserID)(nil), "user_proto.UserID")
	proto.RegisterType((*UserEmail)(nil), "user_proto.UserEmail")
	proto.RegisterType((*User)(nil), "user_proto.User")
}

func init() { proto.RegisterFile("user.proto", fileDescriptor_116e343673f7ffaf) }

var fileDescriptor_116e343673f7ffaf = []byte{
	// 419 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x52, 0x4f, 0x6b, 0xd4, 0x40,
	0x14, 0xef, 0x24, 0xdb, 0xec, 0xe6, 0x2d, 0x96, 0xe5, 0xa1, 0x32, 0x84, 0x22, 0x6b, 0x0e, 0xb2,
	0xa7, 0x50, 0xea, 0x45, 0x0b, 0x8a, 0xb6, 0xdb, 0x2e, 0x0b, 0x6a, 0x24, 0xda, 0xb3, 0x8c, 0xcd,
	0x53, 0x43, 0xb3, 0x49, 0x98, 0x99, 0x56, 0xf2, 0x19, 0xfc, 0x0e, 0x7e, 0x4c, 0xcf, 0x32, 0x93,
	0xa4, 0x1b, 0xe3, 0x5e, 0x7a, 0x7b, 0xbf, 0x7f, 0x6f, 0x7e, 0x99, 0x0c, 0xc0, 0x8d, 0x22, 0x19,
	0x55, 0xb2, 0xd4, 0x25, 0xda, 0xf9, 0x8b, 0x9d, 0xc3, 0x37, 0x30, 0x7b, 0x2f, 0x8a, 0xfa, 0x52,
	0x91, 0x54, 0x71, 0xa5, 0xb3, 0xb2, 0x50, 0x88, 0x30, 0xaa, 0xc4, 0x77, 0xe2, 0x6c, 0xce, 0x16,
	0x6e, 0x62, 0x67, 0xe4, 0x30, 0x8e, 0x65, 0x4a, 0xf2, 0xb4, 0xe6, 0xce, 0x9c, 0x2d, 0xfc, 0xa4,
	0x83, 0xe1, 0x2f, 0x06, 0x07, 0x71, 0x41, 0x66, 0x43, 0xb7, 0xe0, 0x35, 0x78, 0xdf, 0x32, 0xca,
	0x53, 0xc5, 0xd9, 0xdc, 0x5d, 0x4c, 0x8f, 0x9f, 0x45, 0xdb, 0x13, 0xa3, 0x7f, 0xbd, 0xd1, 0x85,
	0x35, 0x9e, 0x17, 0x5a, 0xd6, 0x49, 0x9b, 0x0a, 0x5e, 0xc2, 0xb4, 0x47, 0xe3, 0x0c, 0xdc, 0x6b,
	0xaa, 0x6d, 0x1d, 0x3f, 0x31, 0x23, 0x3e, 0x84, 0xfd, 0x5b, 0x91, 0xdf, 0x90, 0xed, 0x32, 0x49,
	0x1a, 0x70, 0xe2, 0xbc, 0x60, 0x21, 0x07, 0xcf, 0x6c, 0x5f, 0x2f, 0xf1, 0x00, 0x9c, 0xf5, 0xb2,
	0xfd, 0x06, 0x67, 0xbd, 0x0c, 0x9f, 0x82, 0x6f, 0x94, 0xf3, 0x8d, 0xc8, 0x72, 0xb3, 0xc0, 0x0e,
	0xed, 0xd2, 0x06, 0x84, 0x7f, 0x18, 0x8c, 0x8c, 0x67, 0x98, 0xdd, 0xda, 0x9d, 0x9e, 0x1d, 0x03,
	0x98, 0x18, 0x77, 0x21, 0x36, 0xc4, 0x5d, 0x2b, 0xdc, 0x61, 0x3c, 0x04, 0xff, 0x22, 0x93, 0x4a,
	0x7f, 0x30, 0xe2, 0xc8, 0x8a, 0x5b, 0xc2, 0x24, 0xdf, 0x89, 0x56, 0xdc, 0x6f, 0x92, 0x1d, 0xc6,
	0xc7, 0xe0, 0xbd, 0xbd, 0x15, 0x5a, 0x48, 0xee, 0x59, 0xa5, 0x45, 0xf8, 0x04, 0xe0, 0x73, 0xa9,
	0x45, 0xfe, 0xe9, 0xaa, 0x94, 0xc4, 0xc7, 0xb6, 0x5b, 0x8f, 0xb9, 0xd3, 0x57, 0x62, 0x43, 0x8a,
	0x4f, 0x7a, 0xba, 0x65, 0xcc, 0x99, 0x1f, 0x85, 0x52, 0x3f, 0x4b, 0x99, 0x72, 0xbf, 0x39, 0xb3,
	0xc3, 0xc7, 0xbf, 0x1d, 0x98, 0x9a, 0xea, 0x67, 0x3f, 0xe8, 0xea, 0x9a, 0x24, 0x1e, 0x81, 0xb7,
	0x22, 0x1d, 0x17, 0x84, 0xd8, 0xff, 0x75, 0xcd, 0xcd, 0x06, 0xb3, 0x21, 0x17, 0xee, 0xe1, 0x09,
	0x3c, 0x68, 0x12, 0xa7, 0x75, 0x73, 0x39, 0x8f, 0x86, 0x26, 0x4b, 0xef, 0xcc, 0xbe, 0x82, 0xf1,
	0x8a, 0xb4, 0x79, 0x86, 0x78, 0xd8, 0x97, 0x87, 0x0f, 0x73, 0x57, 0xf8, 0x88, 0x99, 0xb2, 0x67,
	0x92, 0x84, 0x26, 0xfc, 0x4f, 0x0f, 0x76, 0xd4, 0x0f, 0xf7, 0x4c, 0xe2, 0xb2, 0x4a, 0xef, 0x91,
	0xf8, 0xea, 0x59, 0xfc, 0xfc, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x40, 0xd1, 0xb1, 0xe1, 0x47,
	0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserCheckerClient is the client API for UserChecker service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserCheckerClient interface {
	GetOne(ctx context.Context, in *UserID, opts ...grpc.CallOption) (*User, error)
	GetOneByEmail(ctx context.Context, in *UserEmail, opts ...grpc.CallOption) (*User, error)
	GetMany(ctx context.Context, in *ManyUsersOptions, opts ...grpc.CallOption) (UserChecker_GetManyClient, error)
	Create(ctx context.Context, in *User, opts ...grpc.CallOption) (*UserID, error)
	Update(ctx context.Context, in *User, opts ...grpc.CallOption) (*UserID, error)
}

type userCheckerClient struct {
	cc *grpc.ClientConn
}

func NewUserCheckerClient(cc *grpc.ClientConn) UserCheckerClient {
	return &userCheckerClient{cc}
}

func (c *userCheckerClient) GetOne(ctx context.Context, in *UserID, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/user_proto.UserChecker/GetOne", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userCheckerClient) GetOneByEmail(ctx context.Context, in *UserEmail, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/user_proto.UserChecker/GetOneByEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userCheckerClient) GetMany(ctx context.Context, in *ManyUsersOptions, opts ...grpc.CallOption) (UserChecker_GetManyClient, error) {
	stream, err := c.cc.NewStream(ctx, &_UserChecker_serviceDesc.Streams[0], "/user_proto.UserChecker/GetMany", opts...)
	if err != nil {
		return nil, err
	}
	x := &userCheckerGetManyClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type UserChecker_GetManyClient interface {
	Recv() (*User, error)
	grpc.ClientStream
}

type userCheckerGetManyClient struct {
	grpc.ClientStream
}

func (x *userCheckerGetManyClient) Recv() (*User, error) {
	m := new(User)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *userCheckerClient) Create(ctx context.Context, in *User, opts ...grpc.CallOption) (*UserID, error) {
	out := new(UserID)
	err := c.cc.Invoke(ctx, "/user_proto.UserChecker/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userCheckerClient) Update(ctx context.Context, in *User, opts ...grpc.CallOption) (*UserID, error) {
	out := new(UserID)
	err := c.cc.Invoke(ctx, "/user_proto.UserChecker/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserCheckerServer is the server API for UserChecker service.
type UserCheckerServer interface {
	GetOne(context.Context, *UserID) (*User, error)
	GetOneByEmail(context.Context, *UserEmail) (*User, error)
	GetMany(*ManyUsersOptions, UserChecker_GetManyServer) error
	Create(context.Context, *User) (*UserID, error)
	Update(context.Context, *User) (*UserID, error)
}

func RegisterUserCheckerServer(s *grpc.Server, srv UserCheckerServer) {
	s.RegisterService(&_UserChecker_serviceDesc, srv)
}

func _UserChecker_GetOne_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserCheckerServer).GetOne(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_proto.UserChecker/GetOne",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserCheckerServer).GetOne(ctx, req.(*UserID))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserChecker_GetOneByEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserEmail)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserCheckerServer).GetOneByEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_proto.UserChecker/GetOneByEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserCheckerServer).GetOneByEmail(ctx, req.(*UserEmail))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserChecker_GetMany_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ManyUsersOptions)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(UserCheckerServer).GetMany(m, &userCheckerGetManyServer{stream})
}

type UserChecker_GetManyServer interface {
	Send(*User) error
	grpc.ServerStream
}

type userCheckerGetManyServer struct {
	grpc.ServerStream
}

func (x *userCheckerGetManyServer) Send(m *User) error {
	return x.ServerStream.SendMsg(m)
}

func _UserChecker_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserCheckerServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_proto.UserChecker/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserCheckerServer).Create(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserChecker_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserCheckerServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_proto.UserChecker/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserCheckerServer).Update(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserChecker_serviceDesc = grpc.ServiceDesc{
	ServiceName: "user_proto.UserChecker",
	HandlerType: (*UserCheckerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetOne",
			Handler:    _UserChecker_GetOne_Handler,
		},
		{
			MethodName: "GetOneByEmail",
			Handler:    _UserChecker_GetOneByEmail_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _UserChecker_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _UserChecker_Update_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetMany",
			Handler:       _UserChecker_GetMany_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "user.proto",
}
